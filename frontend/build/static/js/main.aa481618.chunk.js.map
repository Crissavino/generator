{"version":3,"sources":["pages/UserArea/UserArea.module.css","pages/NftCreationConfirmed/NftCreationConfirmed.module.css","partials/Header/Header.js","pages/Layout/Layout.js","pages/NftCreationConfirmed/NftCreationConfirmed.js","pages/UserArea/UserArea.js","index.js"],"names":["module","exports","Header","className","href","type","id","this","attachScripts","web3","document","createElement","async","src","body","appendChild","swal","Component","defaultProps","Layout","NftCreationConfirmed","style","visibility","htmlFor","name","placeholder","onClick","pay","a","loadNewNftImages","metamaskLogo","numberOfEmptyRetries","interval","setInterval","fetch","method","headers","JSON","stringify","userUuid","localStorage","getItem","then","response","json","data","imagePaths","length","removeItem","clearInterval","Swal","fire","title","text","icon","confirmButtonText","window","location","nftImageContainer","querySelector","querySelectorAll","customPreloader","classList","add","setAttribute","innerHTML","div","console","log","imagePath","nftImage","preloader","parentNode","removeChild","catch","error","e","addEventListener","preventDefault","ethereum","enable","request","accounts","publicAddress","that","handleSignup","reload","handleSignMessage","handleAuthentication","transaction","code","message","user","nonce","success","msg","params","signature","uuid","amount","Web3","utils","toWei","gasPrice","from","to","value","gas","txHash","html","showConfirmButton","UserArea","styles","App","path","element","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.aa481618.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserArea\":\"UserArea_UserArea__2-XFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NftCreationConfirmed\":\"NftCreationConfirmed_NftCreationConfirmed__3f4fR\",\"paymentModal\":\"NftCreationConfirmed_paymentModal__1T_Yp\"};","import React, {Component} from 'react';\nimport Web3 from \"web3\";\nimport Web3Token from \"web3-token\";\nimport Swal from 'sweetalert2'\n\nclass Header extends Component {\n    render() {\n        return (\n            <header className=\"header navbar-area\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-12\">\n                            <nav className=\"navbar navbar-expand-lg custom\">\n                                <a className=\"navbar-brand\" href=\"/\">\n                                    NFT CREATOR\n                                </a>\n\n                                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                                    <span className=\"toggler-icon\"></span>\n                                    <span className=\"toggler-icon\"></span>\n                                    <span className=\"toggler-icon\"></span>\n                                </button>\n\n                                <div className=\"collapse navbar-collapse sub-menu-bar\" id=\"navbarSupportedContent\">\n                                </div>\n                            </nav>\n                        </div>\n                    </div>\n                </div>\n            </header>\n        );\n    }\n\n    componentDidMount() {\n        this.attachScripts();\n\n    }\n\n    attachScripts() {\n        // const metamaskLogo = document.createElement(\"script\");\n        // metamaskLogo.async = true;\n        // metamaskLogo.src = \"/js/metamaskLogo2.js\";\n        // document.body.appendChild(metamaskLogo);\n\n        const web3 = document.createElement(\"script\");\n        web3.async = true;\n        web3.src = \"https://cdn.jsdelivr.net/npm/web3@latest/dist/web3.min.js\";\n        document.body.appendChild(web3);\n\n        const swal = document.createElement(\"script\");\n        swal.async = true;\n        swal.src = \"//cdn.jsdelivr.net/npm/sweetalert2@11\";\n        document.body.appendChild(swal);\n\n    }\n\n}\n\nHeader.propTypes = {};\n\nHeader.defaultProps = {};\n\nexport default Header;\n","import { Outlet, Link } from \"react-router-dom\";\nimport Header from \"../../partials/Header/Header\";\n\nconst Layout = () => {\n    return (\n        <>\n            <Header/>\n\n            <Outlet />\n        </>\n    )\n};\n\nexport default Layout;","import React, {Component, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './NftCreationConfirmed.module.css';\nimport Swal from 'sweetalert2'\nimport Web3 from \"web3\";\n\nclass NftCreationConfirmed extends Component {\n\n    render() {\n        return (\n            <>\n                <section id=\"home\" className=\"hero-section\">\n                    <div className=\"container\">\n                        <div\n                            className=\"col-12 col-lg-10 p-3 mx-auto text-center big-white-modal d-flex flex-column justify-content-center align-items-center\">\n                            <h2>We are creating your NFTs</h2>\n                            <h4>This could take a while...</h4>\n                            <p>\n                                We will email you when your NFTs are ready.\n                            </p>\n                            <div className=\"row container nft-image-container mx-auto\">\n                                {/*Preloader*/}\n                                <div className=\"col-5 col-lg-3 p-2 custom-preloader-container\">\n                                    <div className=\"custom-preloader\">\n                                        <div className=\"custom-preloader-inner\">\n                                            <div className=\"custom-preloader-icon\">\n                                                <span></span>\n                                                <span></span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                {/*End Preloader*/}\n                            </div>\n                        </div>\n                    </div>\n                </section>\n                <div className=\"payment-modal\" style={{visibility: 'hidden'}}>\n                    <div className=\" container\">\n                        <div className=\"row justify-content-center\">\n                            <form className=\"col-12 col-sm-10 col-md-8 col-lg-6 col-xl-4 payment-form p-5\">\n                                <div className=\"col-12 mb-4\">\n                                    <div className=\"d-flex align-items-center justify-content-between mb-1\">\n                                        <label htmlFor=\"userEmail\">Email</label>\n                                        <span className=\"text-muted\">For receive the access to your NFTs images and metadata</span>\n                                    </div>\n                                    <input type=\"email\" name=\"userEmail\" id=\"userEmail\" className=\"form-control custom\"\n                                           placeholder=\"receivemynfts@nft.com\"/>\n                                </div>\n                                <div className=\"col-12\">\n                                    <div className=\"d-flex align-items-center justify-content-between mb-1\">\n                                        <label htmlFor=\"userEmail\">Payment</label>\n                                        <span className=\"text-muted\">Because we need to eat</span>\n                                    </div>\n                                    <div className=\"d-flex flex-column justify-content-center\">\n                                        <button\n                                            type=\"submit\"\n                                            className=\"btn btn-lg theme-btn payment-button\"\n                                            onClick={() => this.pay()}\n                                        >\n                                            <div className=\"logo-container\" id=\"logo-container\"></div>\n                                            Metamask\n                                        </button>\n                                    </div>\n\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n\n    async componentDidMount() {\n        this.attachScripts();\n\n        this.loadNewNftImages();\n\n        // let paymentModal = document.querySelector('.payment-modal');\n        // paymentModal.style.visibility = 'visible';\n    }\n\n    attachScripts() {\n        const metamaskLogo = document.createElement(\"script\");\n        metamaskLogo.async = true;\n        metamaskLogo.src = \"/js/metamaskLogo.js\";\n        document.body.appendChild(metamaskLogo);\n\n        const web3 = document.createElement(\"script\");\n        web3.async = true;\n        web3.src = \"https://cdn.jsdelivr.net/npm/web3@latest/dist/web3.min.js\";\n        document.body.appendChild(web3);\n    }\n\n    loadNewNftImages() {\n        const STOP_SET_INTERVAL = 10000;\n        const NUMBER_MAX_EMPTY_RETRY = 1003;\n\n        try {\n            let numberOfEmptyRetries = 0;\n            let interval = setInterval(function () {\n                // fetch call to updateNftImageInView url\n                fetch('/nft-creation/are-new-images', {\n                    method: 'post',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        // userUuid: `{{ userUuid }}`\n                        userUuid: localStorage.getItem('userUuid')\n                    })\n                })\n                    .then(function (response) {\n                        return response.json();\n                    })\n                    .then(function (data) {\n\n                        if (data.imagePaths.length === 0) {\n                            numberOfEmptyRetries++;\n                            if (numberOfEmptyRetries > NUMBER_MAX_EMPTY_RETRY) {\n                                localStorage.removeItem('userUuid');\n                                clearInterval(interval);\n                                Swal.fire({\n                                    title: 'Error',\n                                    text: 'Something went wrong. Please try again later.',\n                                    icon: 'error',\n                                    confirmButtonText: 'Ok'\n                                }).then(function () {\n                                    window.location.href = '/';\n                                });\n                            }\n                        }\n\n                        let nftImageContainer = document.querySelector('.nft-image-container');\n                        if (nftImageContainer.querySelectorAll('.nft-image').length === 3) {\n                            // create custom preloader and append it last\n                            let customPreloader = document.createElement('div');\n                            customPreloader.classList.add('custom-preloader');\n                            customPreloader.setAttribute('style', 'width: 100% !important; height: 100% !important;');\n                            customPreloader.innerHTML = `\n                            <div class=\"\">\n                                <div class=\"custom-preloader-icon\" style=\"position: relative; right: 50px;\">\n                                    <span></span>\n                                    <span></span>\n                                </div>\n                            </div>`;\n                            let div = document.createElement('div');\n                            div.classList.add('col-5', 'col-lg-3', 'p-2', 'm-auto');\n                            div.appendChild(customPreloader);\n                            nftImageContainer.appendChild(div);\n                            console.log(nftImageContainer)\n                            // close sockets\n                            clearInterval(interval);\n\n                            // show payment modal\n                            let paymentModal = document.querySelector('.payment-modal');\n                            paymentModal.style.visibility = 'visible';\n\n                            return;\n                        }\n\n                        let imagePath = '';\n                        console.log({data})\n                        if (data.imagePaths[0] && nftImageContainer.querySelectorAll('.nft-image').length === 0) imagePath = data.imagePaths[0];\n                        else if (data.imagePaths[1] && nftImageContainer.querySelectorAll('.nft-image').length === 1) imagePath = data.imagePaths[1];\n                        else if (data.imagePaths[2] && nftImageContainer.querySelectorAll('.nft-image').length === 2) imagePath = data.imagePaths[2];\n                        else return;\n\n                        let nftImage = document.createElement('img');\n                        nftImage.classList.add('nft-image');\n                        nftImage.src = imagePath;\n                        let div = document.createElement('div');\n                        div.classList.add('col-5', 'col-lg-3', 'p-2');\n                        div.appendChild(nftImage);\n                        nftImageContainer.appendChild(div);\n                        // destroy the preloader\n                        let preloader = document.querySelector('.custom-preloader-container');\n                        if (preloader) {\n                            preloader.parentNode.removeChild(preloader);\n                        }\n                    })\n                    .catch(function (error) {\n                        console.log(error);\n                    });\n            }, 3000);\n        } catch (e) {\n            console.log(e);\n        }\n\n        let paymentForm = document.querySelector('.payment-form');\n        paymentForm.addEventListener('submit', (e) => {\n            e.preventDefault();\n        })\n    }\n\n    async pay() {\n        const userUuid = localStorage.getItem('userUuid');\n        if (!userUuid) {\n            await Swal.fire(\n                'Oops...',\n                'You need to start again, please!',\n                'error'\n            ).then(() => {\n                window.location.href = '/';\n            });\n        }\n        try {\n\n            await window.ethereum.enable()\n\n            let accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n            let publicAddress = accounts[0];\n\n            let that = this;\n            // is address already in backend\n            await fetch(`/api/v1/auth/${publicAddress}`, {\n                method: 'get',\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(function (response) {\n                    return response.json();\n                })\n                .then(async function (data) {\n                    if(data) {\n                        return await that.handleSignup(publicAddress, userUuid);\n                    } else {\n                        await Swal.fire(\n                            'Oops...',\n                            'You need to start again, please!',\n                            'error'\n                        ).then(() => {\n                            window.location.reload();\n                        });\n                    }\n                })\n                .then(await that.handleSignMessage)\n                .then(await that.handleAuthentication)\n                .then(await that.transaction)\n                .catch(function (error) {\n                    console.log(error);\n                });\n\n        } catch (e) {\n            console.log(e)\n            console.log(e.code)\n            console.log(e.message)\n\n        }\n\n    }\n\n    async handleSignup (publicAddress, userUuid) {\n        if (!publicAddress || !userUuid) {\n            return Swal.fire(\n                'Oops...',\n                'Something went wrong, please try again!',\n                'error'\n            ).then(() => {\n                window.location.reload();\n            });\n        }\n        console.log('handleSignup')\n        console.log({publicAddress, userUuid})\n        console.log('handleSignup')\n        return await fetch(`/api/v1/auth/create`, {\n            body: JSON.stringify({publicAddress, userUuid}),\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'POST'\n        }).then( response => response.json())\n            .then(async function (data) {\n                console.log({data})\n                if(await data) {\n                    return {\n                        publicAddress: data.user.publicAddress,\n                        nonce: data.user.nonce\n                    };\n                } else {\n                    await Swal.fire(\n                        'Oops...',\n                        'You need to start again, please!',\n                        'error'\n                    ).then(() => {\n                        window.location.reload();\n                    });\n                }\n            })\n            .catch(error => {\n                console.log(error);\n                return {\n                    success: false\n                };\n            });\n    };\n\n    async handleSignMessage({ publicAddress, nonce }) {\n        if (!publicAddress || !nonce) {\n            return Swal.fire(\n                'Oops...',\n                'Something went wrong, please try again!',\n                'error'\n            ).then(() => {\n                window.location.href = '/';\n            });\n        }\n        console.log('handleSignMessage')\n        console.log({publicAddress, nonce})\n        console.log('handleSignMessage')\n        const msg = `\n        Welcome to NFT Creator!\n        You are signing in with this nonce: ${nonce}\n        this will change after a successful login for\n        security reasons.`;\n\n        return await window.ethereum.request({ method: 'personal_sign', params: [msg, publicAddress] })\n            .then(signature => {\n                console.log({ publicAddress, nonce, signature })\n                return { publicAddress, nonce, signature, msg };\n            })\n            .catch(error => {\n                console.log(error);\n                return {\n                    success: false\n                };\n            });\n    };\n\n    async handleAuthentication({ publicAddress, nonce, signature, msg }) {\n        if (!publicAddress || !nonce || !signature || !msg) {\n            return Swal.fire(\n                'Oops...',\n                'Something went wrong, please try again!',\n                'error'\n            ).then(() => {\n                window.location.reload();\n            });\n        }\n        console.log('handleAuthentication')\n        console.log({ publicAddress, nonce, signature })\n        console.log('handleAuthentication')\n        return await fetch(`/api/v1/auth/authenticate`, {\n            body: JSON.stringify({ publicAddress, nonce, signature, msg }),\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'POST'\n        })\n            .then(response => response.json())\n            .then(async (data) => {\n                console.log('handleAuthentication response')\n                console.log(data)\n                console.log('handleAuthentication response')\n                if (data.success) {\n                    return {\n                        publicAddress,\n                        userUuid: data.user.uuid\n                    }\n                } else {\n                    console.log(data)\n                }\n            })\n\n    }\n\n    async transaction({publicAddress, userUuid}) {\n        if (!publicAddress || !userUuid) {\n            return Swal.fire(\n                'Oops...',\n                'Something went wrong, please try again!',\n                'error'\n            ).then(() => {\n                window.location.reload();\n            });\n        }\n        console.log('transaction')\n        console.log({publicAddress, userUuid})\n        if (!publicAddress || !userUuid) {\n            return Swal.fire(\n                'Oops...',\n                'You need to start again, please!',\n                'error'\n            ).then(() => {\n                window.location.href = '/';\n            });\n        }\n        console.log('transaction')\n        if (window.ethereum) {\n\n            // let paymentModal = document.querySelector('.payment-modal');\n            // paymentModal.style.visibility = 'visible';\n\n            //Sending Ethereum to an address\n            let amount = Web3.utils.toWei('0.00002', 'ether');\n            console.log(amount)\n            // // send transaction\n\n            // calculate gas price\n            let gasPrice = await window.ethereum.request({ method: 'eth_gasPrice' });\n\n            console.log('gas price')\n            console.log({gasPrice})\n            console.log('gas price')\n\n            window.ethereum\n                .request({\n                    method: 'eth_sendTransaction',\n                    params: [\n                        {\n                            from: publicAddress,\n                            to: '0x2479c5E000b275FA758882c973b565823b2eaeC4',\n                            value: `0x${amount}`,\n                            gasPrice: '0x09184e72a000',\n                            gas: '0x5208'\n                        },\n                    ],\n                })\n                .then((txHash) => {\n                    console.log('txHash')\n                    console.log(txHash)\n                    console.log('txHash')\n                    window.location.href = '/user/area/' + userUuid;\n                })\n                .catch((error) => console.error);\n        } else {\n            Swal.fire({\n                title: 'Please install MetaMask',\n                html: '<a href=\"https://metamask.io/\">Install MetaMask</a>',\n                icon: 'warning',\n                showConfirmButton: false,\n            });\n        }\n    }\n\n}\n\nexport default NftCreationConfirmed;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './UserArea.module.css';\n\nconst UserArea = () => (\n  <div className={styles.UserArea}>\n    UserArea Component\n  </div>\n);\n\nUserArea.propTypes = {};\n\nUserArea.defaultProps = {};\n\nexport default UserArea;\n","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n// import Header from \"./partials/Header/Header\";\n//\n// ReactDOM.render(\n//   <React.StrictMode>\n//       <Header />\n//     {/*<App />*/}\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n//\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Layout from \"./pages/Layout/Layout\";\nimport NftCreationConfirmed from \"./pages/NftCreationConfirmed/NftCreationConfirmed\";\nimport UserArea from \"./pages/UserArea/UserArea\";\n\nexport default function App() {\n    return (\n        <BrowserRouter>\n            <Routes>\n                <Route path=\"/\" element={<Layout />}>\n                    <Route path=\"/nft-creation/confirmed\" element={<NftCreationConfirmed />} />\n                    <Route path=\"/react/user/area\" element={<UserArea />} />\n                </Route>\n            </Routes>\n        </BrowserRouter>\n    );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}