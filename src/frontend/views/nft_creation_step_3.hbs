<!-- ========================= hero-section start ========================= -->
<section id="home" class="hero-section">
    <div class="container">
        <div class="col-12 col-lg-8 p-3 mx-auto big-white-modal">
            <form id="thirdStepForm" action="{{ saveThirdStepUrl }}" method="post">
                <div class="col-10 col-lg-6 mt-5 mx-auto text-center">
                    <label for="collectionName">What is the name of this collection?</label>
                    <div class="mx-auto mt-3 col-8">
                        <input id="collectionName" type="text" class="form-control custom" name="collectionName">
                    </div>
                </div>

                <div class="col-10 col-lg-6 mt-5 mx-auto text-center">
                    <label for="collectionDescription">What is the description of your collection?</label>
                    <span class="text-muted">
                        The description will be the same for each image in the collection.
                    </span>
                    <div class="mx-auto mt-3">
                        <textarea name="collectionDescription" class="form-control custom" id="collectionDescription" cols="30" rows="5"></textarea>
                    </div>
                </div>

                <div class="col-10 col-lg-6 mt-5 mx-auto text-center">
                    <label for="eachImageName">How should each image be named in the metadata?</label>
                    <span id="eachImageNameText" class="text-muted">NAME #ID</span>
                    <div class="mx-auto mt-3 col-8">
                        <input id="eachImageName" type="text" class="form-control custom" oninput="changeEachImageName(this)" name="eachImageName">
                    </div>
                </div>

                <div class="col-10 col-lg-6 mt-5 mx-auto text-center">
                    <label for="collectionFamily">What is the family of this collection?</label>
                    <div class="mx-auto mt-3 col-8">
                        <input id="collectionFamily" type="text" class="form-control custom" name="collectionFamily">
                    </div>
                </div>

                <div class="col-10 col-lg-6 mt-5 mx-auto text-center">
                    <label for="collectionSymbol">What is the symbol for this collection?</label>
                    <div class="mx-auto mt-3 col-8">
                        <input id="collectionSymbol" type="text" class="form-control custom" name="collectionSymbol">
                    </div>
                </div>

                <div class="col-10 col-lg-6 mt-5 mx-auto text-center">
                    <label for="collectionExternalUrl">What is the external URL for this collection?</label>
                    <div class="mx-auto mt-3 col-8">
                        <input id="collectionExternalUrl" type="text" class="form-control custom" name="collectionExternalUrl">
                    </div>
                </div>

                <div class="col-10 col-lg-6 mt-5 mx-auto text-center">
                    <label for="secondRoyalties">How many royalties should creators receive for secondary sales, in percent?</label>
                    <span class="text-muted">
                        The royalties get distributed to each creator, as determined below.
                    </span>
                    <div class="mx-auto mt-3 col-8">
                        <input id="secondRoyalties" type="number" min="0" max="100" class="form-control custom" name="secondRoyalties" placeholder="%">
                    </div>
                </div>

                <div class="col-12 col-lg-8 mt-5 mx-auto text-center">
                    <p class="mb-0">How should the royalties be split?</p>
                    <span class="text-muted">
                        For secondary sales, the royalties are distributed to each creator, as determined below.
                        Percentages should add up to 100%.
                    </span>
                    <div class="address-container">
                        <div class="row justify-content-center address-1">
                            <div class="col-8 text-left">
                                <label for="wallet-1" class="text-muted my-2">Wallet Address</label>
                                <input id="wallet-1" type="text" class="form-control custom" name="wallet-1" placeholder="">
                            </div>
                            <div class="col-4 col-lg-2">
                                <label for="percent-1" class="text-muted my-2">Percentage</label>
                                <input id="percent-1" type="number" min="0" max="100" class="form-control custom" name="percent-1" value="100" placeholder="%">
                            </div>
                        </div>
                    </div>

                    <div class="row justify-content-center">
                        <div class="col-12 col-lg-8">
                            <p class="add-address-text" onclick="addAnotherWalletAddress()">+ Add another wallet address</p>
                        </div>
                        <div class="col-2"></div>
                    </div>
                </div>

                <div class="btn-container mt-4 mx-auto text-center">
                    <a href="{{ previousStepUrl }}" type="button" id="nextButton" class="btn text-white theme-btn back-button mr-4">Back</a>
                    <button type="submit" id="nextButton" class="btn text-white theme-btn next-button">Next</button>
                </div>
            </form>
        </div>
    </div>

</section>
<!-- ========================= hero-section end ========================= -->

<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    function changeEachImageName(element) {
        let name = element.value;
        if (!name) name = 'NAME';
        let eachImageNameText = document.getElementById('eachImageNameText');
        eachImageNameText.innerText = `${name} #ID`;
    }

    function addAnotherWalletAddress() {
        let addressContainer = document.querySelector('.address-container');
        let numberOfNewAddress = addressContainer.children.length + 1;
        let addressClass = `address-${numberOfNewAddress}`;
        let newAddress = `
        <div class="row justify-content-center ${addressClass}">
            <div class="col-8 text-left">
                <label for="wallet-${numberOfNewAddress}" class="text-muted my-2 d-flex justify-content-between">
                    Wallet Address
                    <span class="delete-text" onclick="deleteWallet('${addressClass}')">Delete</span>
                </label>
                <input id="wallet-${numberOfNewAddress}" type="text" class="form-control custom" name="wallet-${numberOfNewAddress}" placeholder="">
            </div>
            <div class="col-4 col-lg-2">
                <label for="percent-${numberOfNewAddress}" class="text-muted my-2">Percentage</label>
                <input id="percent-${numberOfNewAddress}" type="number" min="0" max="100" class="form-control custom" name="percent-${numberOfNewAddress}" value="" placeholder="%">
            </div>
        </div>
        `;

        addressContainer.insertAdjacentHTML('beforeend', newAddress);
    }

    function deleteWallet(addressClassToDelete) {
        let addressContainer = document.querySelector('.address-container');
        let addressToDelete = document.querySelector(`.${addressClassToDelete}`);
        addressContainer.removeChild(addressToDelete);
    }

    let thirdStepForm = document.getElementById('thirdStepForm');
    thirdStepForm.addEventListener('submit', function(e) {
        e.preventDefault();
        let validate = validateThirdStepForm();
        if (!validate.success) {
            return Swal.fire({
                width: 300,
                position: 'bottom-end',
                icon: 'error',
                title: 'Oops...',
                text: validate.errors[0].message
            })
        }

        thirdStepForm.submit();
    });

    function validateThirdStepForm() {
        let errors = [];

        let allPercent = document.querySelectorAll('[id^="percent-"]')
        let allPercentValue = 0;
        allPercent.forEach(function(element) {
            if (
                parseInt(element.value.replace(/\s/g, '')) === 0 ||
                element.value === undefined ||
                !element.value
            ) {
                return errors.push({
                    success: false,
                    message: 'Please fill all percentage'
                });
            }
            allPercentValue += parseInt(element.value.replace(/\s/g, ''));
        });
        if (allPercentValue !== 100) {
            errors.push({
                success: false,
                message: 'The sum of percentages for all the wallets must be 100%'
            });
        }

        if (errors.length > 0) {
            return {
                success: false,
                errors: errors
            };
        }

        return {
            success: true,
            message: ''
        }
    }

</script>