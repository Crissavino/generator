<!-- ========================= hero-section start ========================= -->
<section id="home" class="hero-section">
    <div class="shapes">
        <div class="shape shape-1"></div>
<!--        <div class="shape shape-2"></div>-->
        <div class="shape shape-3"></div>
    </div>
    <div class="hero-content-wrapper">
        <div class="col-8 mx-auto big-white-modal">
            <h3 class="wow fadeInLeft text-center" data-wow-delay=".1s">This is your layer folder</h3>
            <p class="mx-auto wow fadeInLeft text-center w-50" data-wow-delay=".1s">
                If you edit your layers you need to re-upload the folder for the changes to take place
            </p>
            <form action="{{ saveThirdStepUrl }}" method="post">
                <div class="d-flex flex-column justify-content-center align-items-center">
                    <span class="wow fadeInLeft folder" onclick="openFolderBrowser()" data-wow-delay=".1s"></span> <br>
                    <a class="custom-link wow fadeInLeft" onclick="openChangeFolderBrowser()" id="changeFolderLink" data-wow-delay=".1s">
                        Change folder
                    </a>
                    <input type="file" name="folder" id="folder" onchange="folderChanged(this)" class="d-none" data-multiple-caption="{count} files selected" webkitdirectory multiple />
                </div>

                <div class="col-6 mt-5 mx-auto text-center">
                    <label for="projectName">Whatâ€™s the name of this project?</label>
                    <div class="mx-auto mt-3 col-8">
                        <input id="projectName" type="text" class="form-control" name="projectName">
                    </div>
                </div>

                <div class="col-6 mt-5 mx-auto text-center">
                    <label for="imagesToGenerate">How many images do you want to generate in total?</label>
                    <div class="mx-auto mt-3 col-4">
                        <input id="imagesToGenerate" type="number" min="10" max="10000" class="form-control col-4" name="imagesToGenerate">
                    </div>
                </div>

                <div class="col-6 mt-5 mx-auto text-center">
                    <label for="projectName">Which blockchain are you using?</label>
                    <span class="text-muted">
                        We currently support metadata generation for Ethereum and Solana NFTs.
                        If you plan to use a different blockchain, you can still use this tool to generate your images but the metadata will not be usable.
                    </span>
                    <div class="mt-3 d-flex justify-content-center align-items-center">
                        <div class="btn-blockchain-toggle">
                            <div class="btn-blockchain-toggle-container" style="grid-template-columns: repeat(2, minmax(0px, 1fr));">
                                <div class="btn-blockchain-selection" style="width: calc(50% - 14px); left: calc(21px + (50% - 14px) * 1);"></div>
                                <button onclick="changeBlockchain(this, 'ethBlockchain')" id="solBlockchain" class="btn-blockchain-plain" style="background-color: transparent;">
                                    <div class="blockchainText">Solana</div>
                                </button>
                                <button onclick="changeBlockchain(this, 'solBlockchain')" id="ethBlockchain" class="btn-blockchain-plain selected" style="background-color: transparent;">
                                    <div class="blockchainText text-white">Ethereum</div>
                                </button>
                            </div>
                        </div>
                    </div>
                    <input type="text" class="d-none" id="blockchainSelectedValue" name="blockchainSelectedValue" value="ethBlockchain">
                </div>

                <div class="btn-container mt-4 mx-auto text-center">
                    <button type="submit" id="nextButton" class="btn next-button">Next</button>
                </div>
            </form>
        </div>
    </div>

</section>
<!-- ========================= hero-section end ========================= -->
<script>
    function openFolderBrowser() {
        const folder = document.getElementById('folder');
        folder.click();
    }

    function openChangeFolderBrowser(input) {
        console.log(input.files)
        console.log(input.files[0].name)
        console.log(input.files[0].size)
        console.log(input.files[0].webkitRelativePath)

    }

    function folderChanged(input) {
    }

    function changeBlockchain(blockchainSelected, blockchainNoSelected) {
        if (blockchainSelected.classList.contains('selected')) return;

        if (blockchainSelected.id === 'ethBlockchain') {
            blockchainSelected.querySelector('.blockchainText').classList.add('text-white');

            let btnBlockchainSelection = document.querySelector('.btn-blockchain-selection');
            btnBlockchainSelection.setAttribute('style', 'width: calc(50% - 14px); left: calc(21px + (50% - 14px) * 1);');

            let blockchainNoSelectedBtn = document.getElementById(blockchainNoSelected);
            blockchainNoSelectedBtn.querySelector('.blockchainText').classList.remove('text-white');
            blockchainSelected.classList.add('selected');
            blockchainNoSelectedBtn.classList.remove('selected');
        } else {
            blockchainSelected.querySelector('.blockchainText').classList.add('text-white');

            let btnBlockchainSelection = document.querySelector('.btn-blockchain-selection');
            btnBlockchainSelection.setAttribute('style', 'width: calc(50% - 14px); left: calc(7px + (50% - 14px) * 0);');

            let blockchainNoSelectedBtn = document.getElementById(blockchainNoSelected);
            blockchainNoSelectedBtn.querySelector('.blockchainText').classList.remove('text-white');
            blockchainSelected.classList.add('selected');
            blockchainNoSelectedBtn.classList.remove('selected');
        }

        let blockchainSelectedValue = document.getElementById('blockchainSelectedValue');
        blockchainSelectedValue.setAttribute('value', blockchainSelected.id);
    }

</script>